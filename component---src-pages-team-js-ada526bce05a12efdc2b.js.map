{"version":3,"file":"component---src-pages-team-js-ada526bce05a12efdc2b.js","mappings":"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","sources":["webpack://ssn-acm-w/./node_modules/@chakra-ui/avatar/dist/chakra-ui-avatar.esm.js","webpack://ssn-acm-w/./src/components/TeamGrid.js","webpack://ssn-acm-w/./src/pages/team.js"],"sourcesContent":["import { useImage } from '@chakra-ui/image';\nimport { forwardRef, useStyles, chakra, useMultiStyleConfig, omitThemingProps, StylesProvider } from '@chakra-ui/system';\nimport { cx, __DEV__, filterUndefined } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { getValidChildren } from '@chakra-ui/react-utils';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar _excluded$1 = [\"name\", \"getInitials\"],\n    _excluded2 = [\"src\", \"name\", \"showBorder\", \"borderRadius\", \"onError\", \"getInitials\", \"icon\", \"iconLabel\", \"loading\", \"children\", \"borderColor\", \"ignoreFallback\"];\n/**\n * AvatarBadge used to show extra badge to the top-right\n * or bottom-right corner of an avatar.\n */\n\nvar AvatarBadge = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n\n  var badgeStyles = _extends({\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    insetEnd: \"0\",\n    bottom: \"0\"\n  }, styles.badge);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref\n  }, props, {\n    className: cx(\"chakra-avatar__badge\", props.className),\n    __css: badgeStyles\n  }));\n});\n\nif (__DEV__) {\n  AvatarBadge.displayName = \"AvatarBadge\";\n}\n\nfunction initials(name) {\n  var _name$split = name.split(\" \"),\n      firstName = _name$split[0],\n      lastName = _name$split[1];\n\n  return firstName && lastName ? \"\" + firstName.charAt(0) + lastName.charAt(0) : firstName.charAt(0);\n}\n/**\n * The avatar name container\n */\n\n\nvar AvatarName = function AvatarName(props) {\n  var name = props.name,\n      getInitials = props.getInitials,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$1);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    role: \"img\",\n    \"aria-label\": name\n  }, rest, {\n    __css: styles.label\n  }), name ? getInitials == null ? void 0 : getInitials(name) : null);\n};\n/**\n * Fallback avatar react component.\n * This should be a generic svg used to represent an avatar\n */\n\n\nvar DefaultIcon = function DefaultIcon(props) {\n  return /*#__PURE__*/React.createElement(chakra.svg, _extends({\n    viewBox: \"0 0 128 128\",\n    color: \"#fff\",\n    width: \"100%\",\n    height: \"100%\",\n    className: \"chakra-avatar__svg\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24\"\n  }));\n};\n\nvar baseStyle = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0\n};\n/**\n * Avatar component that renders an user avatar with\n * support for fallback avatar and name-only avatars\n */\n\nvar Avatar = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Avatar\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      src = _omitThemingProps.src,\n      name = _omitThemingProps.name,\n      showBorder = _omitThemingProps.showBorder,\n      _omitThemingProps$bor = _omitThemingProps.borderRadius,\n      borderRadius = _omitThemingProps$bor === void 0 ? \"full\" : _omitThemingProps$bor,\n      onError = _omitThemingProps.onError,\n      _omitThemingProps$get = _omitThemingProps.getInitials,\n      getInitials = _omitThemingProps$get === void 0 ? initials : _omitThemingProps$get,\n      _omitThemingProps$ico = _omitThemingProps.icon,\n      icon = _omitThemingProps$ico === void 0 ? /*#__PURE__*/React.createElement(DefaultIcon, null) : _omitThemingProps$ico,\n      _omitThemingProps$ico2 = _omitThemingProps.iconLabel,\n      iconLabel = _omitThemingProps$ico2 === void 0 ? \" avatar\" : _omitThemingProps$ico2,\n      loading = _omitThemingProps.loading,\n      children = _omitThemingProps.children,\n      borderColor = _omitThemingProps.borderColor,\n      ignoreFallback = _omitThemingProps.ignoreFallback,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded2);\n\n  var avatarStyles = _extends({\n    borderRadius: borderRadius,\n    borderWidth: showBorder ? \"2px\" : undefined\n  }, baseStyle, styles.container);\n\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor;\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref\n  }, rest, {\n    className: cx(\"chakra-avatar\", props.className),\n    __css: avatarStyles\n  }), /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(AvatarImage, {\n    src: src,\n    loading: loading,\n    onError: onError,\n    getInitials: getInitials,\n    name: name,\n    borderRadius: borderRadius,\n    icon: icon,\n    iconLabel: iconLabel,\n    ignoreFallback: ignoreFallback\n  }), children));\n});\n\nif (__DEV__) {\n  Avatar.displayName = \"Avatar\";\n}\n\nvar AvatarImage = function AvatarImage(props) {\n  var src = props.src,\n      onError = props.onError,\n      getInitials = props.getInitials,\n      name = props.name,\n      borderRadius = props.borderRadius,\n      loading = props.loading,\n      iconLabel = props.iconLabel,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? /*#__PURE__*/React.createElement(DefaultIcon, null) : _props$icon,\n      ignoreFallback = props.ignoreFallback;\n  /**\n   * use the image hook to only show the image when it has loaded\n   */\n\n  var status = useImage({\n    src: src,\n    onError: onError,\n    ignoreFallback: ignoreFallback\n  });\n  var hasLoaded = status === \"loaded\";\n  /**\n   * Fallback avatar applies under 2 conditions:\n   * - If `src` was passed and the image has not loaded or failed to load\n   * - If `src` wasn't passed\n   *\n   * In this case, we'll show either the name avatar or default avatar\n   */\n\n  var showFallback = !src || !hasLoaded;\n\n  if (showFallback) {\n    return name ? /*#__PURE__*/React.createElement(AvatarName, {\n      className: \"chakra-avatar__initials\",\n      getInitials: getInitials,\n      name: name\n    }) : /*#__PURE__*/React.cloneElement(icon, {\n      role: \"img\",\n      \"aria-label\": iconLabel\n    });\n  }\n  /**\n   * If `src` was passed and the image has loaded, we'll show it\n   */\n\n\n  return /*#__PURE__*/React.createElement(chakra.img, {\n    src: src,\n    alt: name,\n    className: \"chakra-avatar__img\",\n    loading: loading,\n    __css: {\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      borderRadius: borderRadius\n    }\n  });\n};\n\nif (__DEV__) {\n  AvatarImage.displayName = \"AvatarImage\";\n}\n\nvar _excluded = [\"children\", \"borderColor\", \"max\", \"spacing\", \"borderRadius\"];\n/**\n * AvatarGroup displays a number of avatars grouped together in a stack.\n */\n\nvar AvatarGroup = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Avatar\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      children = _omitThemingProps.children,\n      borderColor = _omitThemingProps.borderColor,\n      max = _omitThemingProps.max,\n      _omitThemingProps$spa = _omitThemingProps.spacing,\n      spacing = _omitThemingProps$spa === void 0 ? \"-0.75rem\" : _omitThemingProps$spa,\n      _omitThemingProps$bor = _omitThemingProps.borderRadius,\n      borderRadius = _omitThemingProps$bor === void 0 ? \"full\" : _omitThemingProps$bor,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var validChildren = getValidChildren(children);\n  /**\n   * get the avatars within the max\n   */\n\n  var childrenWithinMax = max ? validChildren.slice(0, max) : validChildren;\n  /**\n   * get the remaining avatar count\n   */\n\n  var excess = max != null && validChildren.length - max;\n  /**\n   * Reversing the children is a great way to avoid using zIndex\n   * to overlap the avatars\n   */\n\n  var reversedChildren = childrenWithinMax.reverse();\n  var clones = reversedChildren.map(function (child, index) {\n    var _child$props$borderCo;\n\n    var isFirstAvatar = index === 0;\n    var childProps = {\n      marginEnd: isFirstAvatar ? 0 : spacing,\n      size: props.size,\n      borderColor: (_child$props$borderCo = child.props.borderColor) != null ? _child$props$borderCo : borderColor,\n      showBorder: true\n    };\n    return /*#__PURE__*/React.cloneElement(child, filterUndefined(childProps));\n  });\n  var groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"row-reverse\"\n  };\n\n  var excessStyles = _extends({\n    borderRadius: borderRadius,\n    marginStart: spacing\n  }, baseStyle, styles.excessLabel);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    role: \"group\",\n    __css: groupStyles\n  }, rest, {\n    className: cx(\"chakra-avatar__group\", props.className)\n  }), excess > 0 && /*#__PURE__*/React.createElement(chakra.span, {\n    className: \"chakra-avatar__excess\",\n    __css: excessStyles\n  }, \"+\" + excess), clones);\n});\n\nif (__DEV__) {\n  AvatarGroup.displayName = \"AvatarGroup\";\n}\n\nexport { Avatar, AvatarBadge, AvatarGroup, baseStyle };","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Center,\r\n  Avatar,\r\n  SimpleGrid,\r\n  Text,\r\n  Heading,\r\n  Stack,\r\n  Link,\r\n} from \"@chakra-ui/react\";\r\nimport { FaLinkedin } from \"react-icons/fa\";\r\nfunction GridItem(props) {\r\n  const { name, image, position, link } = props;\r\n  return (\r\n    <Box placeItems={\"center\"} align={\"center\"} p={5}>\r\n      <Center flexDirection=\"column\" p={\"auto\"}>\r\n        <Avatar size=\"2xl\" src={image} />\r\n        {link ? (\r\n          <Link href={link} isExternal pt={5}>\r\n            <FaLinkedin size=\"20px\" />\r\n          </Link>\r\n        ) : null}\r\n        <Text\r\n          fontWeight={\"bold\"}\r\n          fontSize={{ base: \"lg\", sm: \"xl\", lg: \"2xl\" }}\r\n          py={{ base: 3, md: 4 }}\r\n        >\r\n          {name}\r\n        </Text>\r\n        <Text\r\n          fontWeight={\"thin\"}\r\n          as={\"span\"}\r\n          position={\"relative\"}\r\n          fontSize={{ base: \"md\", sm: \"lg\", lg: \"xl\" }}\r\n        >\r\n          {position}\r\n        </Text>\r\n      </Center>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default function TeamGrid(props) {\r\n  const { team, faculty } = props;\r\n  return (\r\n    <Box width={\"full\"}>\r\n      <Stack\r\n        justify=\"center\"\r\n        align={\"center\"}\r\n        spacing={{ base: 6, md: 20 }}\r\n        direction={{ base: \"column\", md: \"row\" }}\r\n      >\r\n        {faculty.map((teamMember) => (\r\n          <GridItem\r\n            name={teamMember.name}\r\n            image={teamMember.image.url}\r\n            position={teamMember.position}\r\n            key={teamMember.id}\r\n            link={teamMember.linkedin}\r\n          />\r\n        ))}\r\n      </Stack>\r\n      <SimpleGrid py={10} columns={{ base: 1, md: 4 }}>\r\n        {team.map((teamMember) => (\r\n          <GridItem\r\n            name={teamMember.name}\r\n            image={teamMember.image.url}\r\n            position={teamMember.position}\r\n            key={teamMember.id}\r\n            link={teamMember.linkedin}\r\n          />\r\n        ))}\r\n      </SimpleGrid>\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Box, Text, Heading } from \"@chakra-ui/react\";\r\nimport { graphql, StaticQuery } from \"gatsby\";\r\n\r\nimport TeamGrid from \"../components/TeamGrid\";\r\n\r\nfunction TeamPage() {\r\n  return (\r\n    <StaticQuery\r\n      query={graphql`\r\n        query {\r\n          allGraphCmsTeamMember(filter: { currentMember: { eq: true } }) {\r\n            nodes {\r\n              id\r\n              name\r\n              position\r\n              image {\r\n                url\r\n              }\r\n              linkedin\r\n            }\r\n          }\r\n          allGraphCmsFacultyMember(filter: { currentMember: { eq: true } }) {\r\n            nodes {\r\n              id\r\n              name\r\n              position\r\n              image {\r\n                url\r\n              }\r\n              linkedin\r\n            }\r\n          }\r\n        }\r\n      `}\r\n      render={(data) => (\r\n        <Box>\r\n          <Box py={{ base: 10, md: 14 }} align={\"center\"}>\r\n            <Heading\r\n              lineHeight={1.1}\r\n              fontWeight={700}\r\n              fontSize={{ base: \"3xl\", sm: \"4xl\", lg: \"5xl\" }}\r\n            >\r\n              <Text as={\"span\"} position={\"relative\"}>\r\n                Our Team\r\n              </Text>\r\n            </Heading>\r\n          </Box>\r\n          <TeamGrid\r\n            team={data.allGraphCmsTeamMember.nodes}\r\n            faculty={data.allGraphCmsFacultyMember.nodes}\r\n          />\r\n        </Box>\r\n      )}\r\n    />\r\n  );\r\n}\r\nexport default TeamPage;\r\n"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","this","_excluded$1","_excluded2","AvatarBadge","props","ref","badgeStyles","position","display","alignItems","justifyContent","insetEnd","bottom","badge","className","cx","__css","initials","name","_name$split","split","firstName","lastName","charAt","displayName","AvatarName","getInitials","rest","styles","role","label","DefaultIcon","viewBox","color","width","height","fill","d","baseStyle","textAlign","textTransform","fontWeight","flexShrink","Avatar","_omitThemingProps","src","showBorder","_omitThemingProps$bor","borderRadius","onError","_omitThemingProps$get","_omitThemingProps$ico","icon","_omitThemingProps$ico2","iconLabel","loading","children","borderColor","ignoreFallback","avatarStyles","borderWidth","undefined","container","value","AvatarImage","_props$icon","status","alt","objectFit","_excluded","AvatarGroup","max","_omitThemingProps$spa","spacing","validChildren","childrenWithinMax","slice","excess","clones","reverse","map","child","index","_child$props$borderCo","childProps","marginEnd","size","excessStyles","marginStart","excessLabel","flexDirection","GridItem","image","link","placeItems","align","p","href","isExternal","pt","fontSize","base","sm","lg","py","md","as","TeamGrid","team","faculty","justify","direction","teamMember","url","id","linkedin","columns","StaticQuery","query","render","data","lineHeight","allGraphCmsTeamMember","nodes","allGraphCmsFacultyMember"],"sourceRoot":""}